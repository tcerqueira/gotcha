[package]
name = "gotcha-server"
version = "0.1.0"
edition = "2024"
license = "MIT"

[features]
# default = ["aws-lambda"]
aws-lambda = ["dep:lambda_http"]

[dependencies]
tokio = { version = "1", features = ["macros", "rt-multi-thread"] }
axum = { version = "0.8", features = ["macros"] }
axum-extra = { version = "0.10", features = ["typed-header"] }
tower = { version = "0.4", features = ["util"] }
tower-http = { version = "0.5", features = ["fs", "trace", "cors"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
rayon = "1"
time = { version = "0.3", features = ["serde", "formatting"] }
serde = { version = "1", features = ["derive"] }
secrecy = { version = "0.8", features = ["serde"] }
anyhow = "1"
thiserror = "2"
reqwest = { version = "0.12", features = ["json", "native-tls-vendored"] }
reqwest-middleware = "0.4"
http-cache-reqwest = { version = "0.15", default-features = false, features = [
    "manager-cacache",
] }
config = { version = "0.14", default-features = false, features = ["yaml"] }
jsonwebtoken = "9"
sqlx = { version = "0.8", features = [
    "postgres",
    "runtime-tokio",
    "tls-native-tls",
    "time",
    "uuid",
    "ipnetwork",
] }
uuid = { version = "1", features = ["v4", "serde"] }
rand = { version = "0.9" }
base64 = "0.22"
fitting = "0.5"
url = { version = "2", features = ["serde"] }
sha2 = "0.10"
isbot = "0.1"
lambda_http = { version = "0.13", optional = true }

[dev-dependencies]
gotcha-server-macros = { path = "../server-macros" }
serde_json = "1"
axum-server = { version = "0.7", features = ["tls-rustls"] }

[package.metadata.lambda.deploy]
env = { "APP_ENVIRONMENT" = "production", "AWS_LAMBDA_HTTP_IGNORE_STAGE_IN_PATH" = "true" }
tags = { "organization" = "gotcha" }
include = ["dist/", "config/"]
