name: Checks
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - master
      - dev
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  SQLX_OFFLINE: true

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: username
          POSTGRES_PASSWORD: password
          POSTGRES_DB: gotcha
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: baptiste0928/cargo-install@v3
        with:
          crate: sqlx-cli
      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-deps-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache test build artifacts
        uses: actions/cache@v4
        with:
          path: target/
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-test-
            ${{ runner.os }}-cargo-
      - name: Run migrations
        env:
          DATABASE_URL: postgresql://username:password@localhost:5432/gotcha
        run: sqlx migrate run
      - name: Run sqlx check
        run: cargo sqlx prepare --check --workspace -- --all-targets --all-features
      - name: Create dummy /dist directory
        run: mkdir dist
      - name: Run tests
        env:
          TEST_AUTH_CLIENT_ID: ${{ secrets.TEST_AUTH_CLIENT_ID }}
          TEST_AUTH_CLIENT_SECRET: ${{ secrets.TEST_AUTH_CLIENT_SECRET }}
        run: cargo test

  lambda:
    name: Lambda build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: mlugg/setup-zig@v2
      - uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo-lambda
      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-deps-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache lambda build artifacts
        uses: actions/cache@v4
        with:
          path: target/
          key: ${{ runner.os }}-cargo-lambda-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-lambda-
            ${{ runner.os }}-cargo-
      - name: Build lambda function
        env:
          SQLX_OFFLINE: true
        run: cargo lambda build --arm64 --features aws-lambda

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Enforce formatting
        run: cargo fmt --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-deps-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache clippy build artifacts
        uses: actions/cache@v4
        with:
          path: target/
          key: ${{ runner.os }}-cargo-clippy-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-clippy-
            ${{ runner.os }}-cargo-
      - name: Linting
        run: cargo clippy -- -D warnings

  examples:
    name: Examples
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-deps-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache examples build artifacts
        uses: actions/cache@v4
        with:
          path: target/
          key: ${{ runner.os }}-cargo-examples-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-examples-
            ${{ runner.os }}-cargo-
      - name: Linting examples
        run: cargo clippy --examples -- -D warnings
