# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Deploy
on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Setup Zig
        uses: mlugg/setup-zig@v1
      - name: Install cargo-lambda
        uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo-lambda
      - name: Install sqlx-cli
        uses: baptiste0928/cargo-install@v3
        with:
          crate: sqlx-cli

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build lambda function
        env:
          SQLX_OFFLINE: true
        run: cargo build-lambda

      - name: Deploy lambda Function
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
          SUPABASE_HOST: ${{ secrets.SUPABASE_HOST }}
          SUPABASE_USER: ${{ secrets.SUPABASE_USER }}
          SUPABASE_PASSWORD: ${{ secrets.SUPABASE_PASSWORD }}
          SUPABASE_DB_NAME: ${{ secrets.SUPABASE_DB_NAME }}
          ADMIN_AUTH_KEY: ${{ secrets.ADMIN_AUTH_KEY }}
        run: |
          cargo deploy-lambda \
            --env-var APP_DATABASE__HOST=$SUPABASE_HOST \
            --env-var APP_DATABASE__USERNAME=$SUPABASE_USER \
            --env-var APP_DATABASE__PASSWORD=$SUPABASE_PASSWORD \
            --env-var APP_DATABASE__DATABASE_NAME=$SUPABASE_DB_NAME \
            --env-var APP_DATABASE__PORT=$SUPABASE_PORT \
            --env-var APP_APPLICATION__ADMIN_AUTH_KEY=$ADMIN_AUTH_KEY \

      - name: Deploy CDK stack
        working-directory: ./infra/gotcha-server
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        run: |
          npm ci
          npm run cdk deploy -- --require-approval never

      - name: Run Migrations
        env:
          DATABASE_URL: postgresql://${{ secrets.SUPABASE_USER }}:${{ secrets.SUPABASE_PASSWORD }}@${{ secrets.SUPABASE_HOST }}:${{ secrets.SUPABASE_PORT }}/${{ secrets.SUPABASE_DB_NAME }}
        run: sqlx migrate run
